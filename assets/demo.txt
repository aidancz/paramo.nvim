lua << EOF
vim.o.nu = true
vim.o.rnu = false
vim.o.columns = 80
vim.o.ve = "all"
vim.cmd("wincmd o")
highlight_line1 = function()
	local lnum = vim.fn.line(".")
	vim.api.nvim_buf_set_extmark(
		0,
		vim.api.nvim_create_namespace("demo"),
		(lnum-1),
		0,
		{
			hl_group = "nofrils-blue-bg",
			hl_eol = true,
			end_row = (lnum-1) + 1,
			end_col = 0,
		}
	)
end
highlight_line2 = function()
	local lnum = vim.fn.line(".")
	vim.api.nvim_buf_set_extmark(
		0,
		vim.api.nvim_create_namespace("demo"),
		(lnum-1),
		0,
		{
			hl_group = "nofrils-yellow-bg",
			hl_eol = true,
			end_row = (lnum-1) + 1,
			end_col = 0,
		}
	)
end
highlight_line3 = function()
	local lnum = vim.fn.line(".")
	vim.api.nvim_buf_set_extmark(
		0,
		vim.api.nvim_create_namespace("demo"),
		(lnum-1),
		vim.fn.col(".") - 1,
		{
			hl_group = "nofrils-blue-bg",
			hl_eol = true,
			end_row = (lnum-1) + 1,
			end_col = 0,
		}
	)
end
highlight_line4 = function()
	local lnum = vim.fn.line(".")
	vim.api.nvim_buf_set_extmark(
		0,
		vim.api.nvim_create_namespace("demo"),
		(lnum-1),
		0,
		{
			hl_group = "nofrils-blue-bg",
			hl_eol = true,
			end_row = (lnum-1),
			end_col = vim.fn.col("."),
		}
	)
end
clear = function()
	vim.api.nvim_buf_clear_namespace(
		0,
		-1,
		1,
		-1
	)
end
vim.keymap.set("n", "w", highlight_line1)
vim.keymap.set("n", "e", highlight_line2)
vim.keymap.set("n", "W", highlight_line3)
vim.keymap.set("n", "<a-w>", highlight_line4)
vim.keymap.set("n", "r", clear)
EOF

maim -g 1280x640+0+0 $(date +'%Y%m%d-%H%M%S-%N').png












Lorem ipsum dolor sit amet. Sit ratione porro et dolores fuga et provident molestiae. Eos sapiente exercitationem rem assumenda labore et adipisci veniam. At mollitia distinctio At quod dolorem qui saepe veritatis et iste magnam et deleniti reprehenderit.
At eius delectus At quae odit ab optio magnam quo omnis dolorum ab repudiandae enim. Ea excepturi voluptatem ut accusantium labore et autem veritatis qui eaque nisi et totam culpa ut corporis repellat.

Sed nesciunt voluptate et vitae assumenda aut fugiat consequatur est rerum beatae nam delectus tenetur nam delectus ipsa. Ea voluptas suscipit est atque sapiente et commodi odit hic architecto sequi ex soluta voluptatem eos voluptate officiis. Qui molestiae quaerat est quos esse est similique excepturi cum exercitationem minus sit dolores minima in asperiores molestias. Qui suscipit internos nam enim reiciendis qui repellat aperiam.

Et voluptatum ullam cum incidunt delectus ex sapiente temporibus! Aut beatae deserunt aut nulla inventore non amet quam est blanditiis delectus eum iusto officia est error galisum.
















void
arrangemon(Monitor *m)
{
	strncpy(m->ltsymbol, m->lt[m->sellt]->symbol, sizeof m->ltsymbol);
	if (m->lt[m->sellt]->arrange)
		m->lt[m->sellt]->arrange(m);
}

void
attach(Client *c)
{
	c->next = c->mon->clients;
	c->mon->clients = c;
}




void
attachstack(Client *c)
{
	c->snext = c->mon->stack;
	c->mon->stack = c;
}













local SumTo = function(number)
    local sum = 0
    for time = 1, number do
        print("This is the " .. time .. "-th time.")
        sum = sum + time
    end

    print("The sum is " .. sum)
    return sum
end

# copy from https://github.com/jessekelighine/vindent.nvim









-- defines a factorial function
function fact (n)
  -- if n == 0 then
    -- return 1
  -- else
    -- return n * fact(n-1)
  -- end
end


print("enter a number:")
a = io.read("*number")        -- read a number
print(fact(a))
print(fact(a))
